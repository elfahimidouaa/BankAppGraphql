{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\PC\\\\Desktop\\\\react-transaction-bank-main\\\\src\\\\components\\\\Comptes.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useQuery } from '@apollo/client';\nimport { GET_ALL_COMPTES, GET_TOTAL_SOLDE, GET_COMPTE_BY_ID } from '../graphql/queries';\nimport './style.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Comptes = () => {\n  _s();\n  // Récupération des données de tous les comptes\n  const {\n    loading: loadingComptes,\n    error: errorComptes,\n    data: dataComptes\n  } = useQuery(GET_ALL_COMPTES);\n\n  // Récupération des données du total du solde\n  const {\n    loading: loadingSolde,\n    error: errorSolde,\n    data: dataSolde\n  } = useQuery(GET_TOTAL_SOLDE);\n\n  // Etat pour gérer l'ID du compte à rechercher\n  const [compteId, setCompteId] = useState('');\n\n  // Gestion de la recherche d'un compte par ID\n  const {\n    loading: loadingCompteById,\n    error: errorCompteById,\n    data: dataCompteById\n  } = useQuery(GET_COMPTE_BY_ID, {\n    variables: {\n      id: compteId\n    },\n    skip: !compteId // Ne pas effectuer la requête si l'ID est vide\n  });\n  const handleSearchChange = event => {\n    setCompteId(event.target.value);\n  };\n  const handleSearchClick = event => {\n    event.preventDefault(); // Empêche le comportement de défilement vers le haut\n    if (compteId) {\n      // Déclencher la recherche uniquement si un ID est fourni\n      setCompteId(compteId);\n    }\n  };\n  if (loadingComptes || loadingSolde || loadingCompteById) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Chargement...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 67\n  }, this);\n  if (errorComptes) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: [\"Erreur lors du chargement des comptes : \", errorComptes.message]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 28\n  }, this);\n  if (errorSolde) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: [\"Erreur lors du chargement du solde total : \", errorSolde.message]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 26\n  }, this);\n  if (errorCompteById) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: [\"Erreur lors de la recherche du compte : \", errorCompteById.message]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 31\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Liste des Comptes\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: dataComptes.allComptes.map(compte => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"ID : \", compte.id]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Solde : \", compte.solde, \"\\u20AC\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Date : \", compte.dateCreation]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Type : \", compte.type]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 13\n        }, this)]\n      }, compte.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        children: \"Total des Soldes\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Total des comptes : \", dataSolde.totalSolde.count]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Solde total : \", dataSolde.totalSolde.sum, \"\\u20AC\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Solde moyen : \", dataSolde.totalSolde.average, \"\\u20AC\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        children: \"Rechercher un compte par ID\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Entrez l'ID du compte\",\n        value: compteId,\n        onChange: handleSearchChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleSearchClick,\n        children: \"Chercher\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this), dataCompteById && dataCompteById.compteById ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"Compte Trouv\\xE9 :\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"ID : \", dataCompteById.compteById.id]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Solde : \", dataCompteById.compteById.solde, \"\\u20AC\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Date : \", dataCompteById.compteById.dateCreation]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Type : \", dataCompteById.compteById.type]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 11\n      }, this) : compteId && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Aucun compte trouv\\xE9 avec cet ID.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 23\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n};\n_s(Comptes, \"4jizJQR4vgkPxQibaNwz6MbQrd8=\", false, function () {\n  return [useQuery, useQuery, useQuery];\n});\n_c = Comptes;\nexport default Comptes;\nvar _c;\n$RefreshReg$(_c, \"Comptes\");","map":{"version":3,"names":["React","useState","useQuery","GET_ALL_COMPTES","GET_TOTAL_SOLDE","GET_COMPTE_BY_ID","jsxDEV","_jsxDEV","Comptes","_s","loading","loadingComptes","error","errorComptes","data","dataComptes","loadingSolde","errorSolde","dataSolde","compteId","setCompteId","loadingCompteById","errorCompteById","dataCompteById","variables","id","skip","handleSearchChange","event","target","value","handleSearchClick","preventDefault","children","fileName","_jsxFileName","lineNumber","columnNumber","message","allComptes","map","compte","solde","dateCreation","type","totalSolde","count","sum","average","placeholder","onChange","onClick","compteById","_c","$RefreshReg$"],"sources":["C:/Users/PC/Desktop/react-transaction-bank-main/src/components/Comptes.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { useQuery } from '@apollo/client';\nimport { GET_ALL_COMPTES, GET_TOTAL_SOLDE, GET_COMPTE_BY_ID } from '../graphql/queries';\nimport './style.css';\n\nconst Comptes = () => {\n  // Récupération des données de tous les comptes\n  const { loading: loadingComptes, error: errorComptes, data: dataComptes } = useQuery(GET_ALL_COMPTES);\n\n  // Récupération des données du total du solde\n  const { loading: loadingSolde, error: errorSolde, data: dataSolde } = useQuery(GET_TOTAL_SOLDE);\n\n  // Etat pour gérer l'ID du compte à rechercher\n  const [compteId, setCompteId] = useState('');\n  \n  // Gestion de la recherche d'un compte par ID\n  const { loading: loadingCompteById, error: errorCompteById, data: dataCompteById } = useQuery(GET_COMPTE_BY_ID, {\n    variables: { id: compteId },\n    skip: !compteId, // Ne pas effectuer la requête si l'ID est vide\n  });\n\n  const handleSearchChange = (event) => {\n    setCompteId(event.target.value);\n  };\n\n  const handleSearchClick = (event) => {\n    event.preventDefault();  // Empêche le comportement de défilement vers le haut\n    if (compteId) {\n      // Déclencher la recherche uniquement si un ID est fourni\n      setCompteId(compteId);\n    }\n  };\n\n  if (loadingComptes || loadingSolde || loadingCompteById) return <p>Chargement...</p>;\n  if (errorComptes) return <p>Erreur lors du chargement des comptes : {errorComptes.message}</p>;\n  if (errorSolde) return <p>Erreur lors du chargement du solde total : {errorSolde.message}</p>;\n  if (errorCompteById) return <p>Erreur lors de la recherche du compte : {errorCompteById.message}</p>;\n\n  return (\n    <div>\n      <h3>Liste des Comptes</h3>\n      <ul>\n        {dataComptes.allComptes.map((compte) => (\n          <li key={compte.id}>\n            <p>ID : {compte.id}</p>\n            <p>Solde : {compte.solde}€</p>\n            <p>Date : {compte.dateCreation}</p>\n            <p>Type : {compte.type}</p>\n          </li>\n        ))}\n      </ul>\n\n      {/* Affichage des informations du total du solde */}\n      <div>\n        <h4>Total des Soldes</h4>\n        <p>Total des comptes : {dataSolde.totalSolde.count}</p>\n        <p>Solde total : {dataSolde.totalSolde.sum}€</p>\n        <p>Solde moyen : {dataSolde.totalSolde.average}€</p>\n      </div>\n\n      {/* Formulaire de recherche par ID */}\n      <div>\n        <h4>Rechercher un compte par ID</h4>\n        <input\n          type=\"text\"\n          placeholder=\"Entrez l'ID du compte\"\n          value={compteId}\n          onChange={handleSearchChange}\n        />\n        <button onClick={handleSearchClick}>Chercher</button>\n\n        {dataCompteById && dataCompteById.compteById ? (\n          <div>\n            <h4>Compte Trouvé :</h4>\n            <p>ID : {dataCompteById.compteById.id}</p>\n            <p>Solde : {dataCompteById.compteById.solde}€</p>\n            <p>Date : {dataCompteById.compteById.dateCreation}</p>\n            <p>Type : {dataCompteById.compteById.type}</p>\n          </div>\n        ) : (\n          compteId && <p>Aucun compte trouvé avec cet ID.</p>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default Comptes;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}