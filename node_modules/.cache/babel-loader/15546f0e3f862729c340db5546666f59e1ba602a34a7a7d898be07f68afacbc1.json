{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\PC\\\\Desktop\\\\react-transaction-bank-main\\\\src\\\\components\\\\Transactions.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { useQuery } from '@apollo/client';\nimport { GET_ALL_TRANSACTIONS } from '../graphql/queries';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Transactions = () => {\n  _s();\n  const {\n    loading,\n    error,\n    data,\n    refetch\n  } = useQuery(GET_ALL_TRANSACTIONS);\n  if (loading) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 23\n  }, this);\n  if (error) {\n    console.error('GraphQL error:', error);\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Error: \", error.message]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Transactions\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: data.allTransactions.map(transaction => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Montant: \", transaction.montant]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Date: \", transaction.date]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Type: \", transaction.type]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Compte ID: \", transaction.compte.id]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Solde: \", transaction.compte.solde, \"\\u20AC\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 13\n        }, this)]\n      }, transaction.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => refetch(),\n      children: \"Refetch Transactions\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), \" \"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 5\n  }, this);\n};\n_s(Transactions, \"D1/SdZTYM540x1wj5x+NzEA5Uvk=\", false, function () {\n  return [useQuery];\n});\n_c = Transactions;\nexport default Transactions;\nvar _c;\n$RefreshReg$(_c, \"Transactions\");","map":{"version":3,"names":["React","useQuery","GET_ALL_TRANSACTIONS","jsxDEV","_jsxDEV","Transactions","_s","loading","error","data","refetch","children","fileName","_jsxFileName","lineNumber","columnNumber","console","message","allTransactions","map","transaction","montant","date","type","compte","id","solde","onClick","_c","$RefreshReg$"],"sources":["C:/Users/PC/Desktop/react-transaction-bank-main/src/components/Transactions.js"],"sourcesContent":["import React from 'react';\nimport { useQuery } from '@apollo/client';\nimport { GET_ALL_TRANSACTIONS } from '../graphql/queries';\n\nconst Transactions = () => {\n  const { loading, error, data, refetch } = useQuery(GET_ALL_TRANSACTIONS);\n\n  if (loading) return <p>Loading...</p>;\n  if (error) {\n    console.error('GraphQL error:', error);\n    return <p>Error: {error.message}</p>;\n  }\n\n  return (\n    <div>\n      <h2>Transactions</h2>\n      <ul>\n        {data.allTransactions.map((transaction) => (\n          <li key={transaction.id}>\n            <p>Montant: {transaction.montant}</p>\n            <p>Date: {transaction.date}</p>\n            <p>Type: {transaction.type}</p>\n            <p>Compte ID: {transaction.compte.id}</p>\n            <p>Solde: {transaction.compte.solde}â‚¬</p>\n          </li>\n        ))}\n      </ul>\n      <button onClick={() => refetch()}>Refetch Transactions</button> {/* Ajoutez un bouton pour forcer un refetch */}\n    </div>\n  );\n};\n\nexport default Transactions;\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,QAAQ,QAAQ,gBAAgB;AACzC,SAASC,oBAAoB,QAAQ,oBAAoB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1D,MAAMC,YAAY,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACzB,MAAM;IAAEC,OAAO;IAAEC,KAAK;IAAEC,IAAI;IAAEC;EAAQ,CAAC,GAAGT,QAAQ,CAACC,oBAAoB,CAAC;EAExE,IAAIK,OAAO,EAAE,oBAAOH,OAAA;IAAAO,QAAA,EAAG;EAAU;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAG,CAAC;EACrC,IAAIP,KAAK,EAAE;IACTQ,OAAO,CAACR,KAAK,CAAC,gBAAgB,EAAEA,KAAK,CAAC;IACtC,oBAAOJ,OAAA;MAAAO,QAAA,GAAG,SAAO,EAACH,KAAK,CAACS,OAAO;IAAA;MAAAL,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC;EACtC;EAEA,oBACEX,OAAA;IAAAO,QAAA,gBACEP,OAAA;MAAAO,QAAA,EAAI;IAAY;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACrBX,OAAA;MAAAO,QAAA,EACGF,IAAI,CAACS,eAAe,CAACC,GAAG,CAAEC,WAAW,iBACpChB,OAAA;QAAAO,QAAA,gBACEP,OAAA;UAAAO,QAAA,GAAG,WAAS,EAACS,WAAW,CAACC,OAAO;QAAA;UAAAT,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eACrCX,OAAA;UAAAO,QAAA,GAAG,QAAM,EAACS,WAAW,CAACE,IAAI;QAAA;UAAAV,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eAC/BX,OAAA;UAAAO,QAAA,GAAG,QAAM,EAACS,WAAW,CAACG,IAAI;QAAA;UAAAX,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eAC/BX,OAAA;UAAAO,QAAA,GAAG,aAAW,EAACS,WAAW,CAACI,MAAM,CAACC,EAAE;QAAA;UAAAb,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eACzCX,OAAA;UAAAO,QAAA,GAAG,SAAO,EAACS,WAAW,CAACI,MAAM,CAACE,KAAK,EAAC,QAAC;QAAA;UAAAd,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAG,CAAC;MAAA,GALlCK,WAAW,CAACK,EAAE;QAAAb,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAMnB,CACL;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CAAC,eACLX,OAAA;MAAQuB,OAAO,EAAEA,CAAA,KAAMjB,OAAO,CAAC,CAAE;MAAAC,QAAA,EAAC;IAAoB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,KAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC7D,CAAC;AAEV,CAAC;AAACT,EAAA,CA1BID,YAAY;EAAA,QAC0BJ,QAAQ;AAAA;AAAA2B,EAAA,GAD9CvB,YAAY;AA4BlB,eAAeA,YAAY;AAAC,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}