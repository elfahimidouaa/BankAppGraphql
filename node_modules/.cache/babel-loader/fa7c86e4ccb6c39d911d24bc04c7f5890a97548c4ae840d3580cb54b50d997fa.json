{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\PC\\\\Desktop\\\\react-transaction-bank-main\\\\src\\\\components\\\\Transactions.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { useQuery } from '@apollo/client';\nimport { GET_ALL_TRANSACTIONS } from '../graphql/queries';\nimport './style.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Transactions = () => {\n  _s();\n  const {\n    loading,\n    error,\n    data\n  } = useQuery(GET_ALL_TRANSACTIONS);\n  if (loading) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Chargement...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 23\n  }, this);\n  if (error) {\n    console.error('Erreur GraphQL:', error);\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Erreur: \", error.message]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"transactions-container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"transactions-cards\",\n      children: data.allTransactions.map(transaction => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"transaction-card\",\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: [\"Transaction ID: \", transaction.id]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Montant:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 20,\n            columnNumber: 16\n          }, this), \" \", transaction.montant, \"\\u20AC\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Date:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 21,\n            columnNumber: 16\n          }, this), \" \", transaction.date]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Type:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 22,\n            columnNumber: 16\n          }, this), \" \", transaction.type]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Compte ID:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 23,\n            columnNumber: 16\n          }, this), \" \", transaction.compte.id]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Solde:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 24,\n            columnNumber: 16\n          }, this), \" \", transaction.compte.solde, \"\\u20AC\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 13\n        }, this)]\n      }, transaction.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 5\n  }, this);\n};\n_s(Transactions, \"OQZiY3KqWoytFPIJWw/H9Hrmbok=\", false, function () {\n  return [useQuery];\n});\n_c = Transactions;\nexport default Transactions;\nvar _c;\n$RefreshReg$(_c, \"Transactions\");","map":{"version":3,"names":["React","useQuery","GET_ALL_TRANSACTIONS","jsxDEV","_jsxDEV","Transactions","_s","loading","error","data","children","fileName","_jsxFileName","lineNumber","columnNumber","console","message","className","allTransactions","map","transaction","id","montant","date","type","compte","solde","_c","$RefreshReg$"],"sources":["C:/Users/PC/Desktop/react-transaction-bank-main/src/components/Transactions.js"],"sourcesContent":["import React from 'react';\nimport { useQuery } from '@apollo/client';\nimport { GET_ALL_TRANSACTIONS } from '../graphql/queries';\nimport './style.css';\nconst Transactions = () => {\n  const { loading, error, data } = useQuery(GET_ALL_TRANSACTIONS);\n\n  if (loading) return <p>Chargement...</p>;\n  if (error) {\n    console.error('Erreur GraphQL:', error);\n    return <p>Erreur: {error.message}</p>;\n  }\n\n  return (\n    <div className=\"transactions-container\">\n      <div className=\"transactions-cards\">\n        {data.allTransactions.map((transaction) => (\n          <div className=\"transaction-card\" key={transaction.id}>\n            <h4>Transaction ID: {transaction.id}</h4>\n            <p><strong>Montant:</strong> {transaction.montant}€</p>\n            <p><strong>Date:</strong> {transaction.date}</p>\n            <p><strong>Type:</strong> {transaction.type}</p>\n            <p><strong>Compte ID:</strong> {transaction.compte.id}</p>\n            <p><strong>Solde:</strong> {transaction.compte.solde}€</p>\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default Transactions;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}