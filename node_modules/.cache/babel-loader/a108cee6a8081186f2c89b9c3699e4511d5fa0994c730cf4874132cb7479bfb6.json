{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\PC\\\\Desktop\\\\react-transaction-bank-main\\\\src\\\\components\\\\AddComptes.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useMutation } from '@apollo/client';\nimport { SAVE_COMPTE, GET_ALL_COMPTES } from '../graphql/queries';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AddComptes = () => {\n  _s();\n  const [solde, setSolde] = useState('');\n  const [type, setType] = useState('COURANT');\n  const [dateCreation, setDateCreation] = useState(new Date().toISOString());\n  const [saveCompte, {\n    error\n  }] = useMutation(SAVE_COMPTE, {\n    refetchQueries: [{\n      query: GET_ALL_COMPTES\n    }]\n  });\n  const handleSubmit = async e => {\n    e.preventDefault();\n    try {\n      await saveCompte({\n        variables: {\n          compte: {\n            solde: parseFloat(solde),\n            type,\n            dateCreation\n          }\n        }\n      });\n      setSolde('');\n      setType('COURANT');\n      setDateCreation(new Date().toISOString());\n    } catch (err) {\n      console.error(err);\n    }\n  };\n  if (error) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: [\"Erreur: \", error.message]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 21\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    className: \"add-compte-form\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Ajouter un compte\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        value: solde,\n        onChange: e => setSolde(e.target.value),\n        placeholder: \"Solde\",\n        className: \"input-field\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"select\", {\n        value: type,\n        onChange: e => setType(e.target.value),\n        className: \"input-field\",\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"COURANT\",\n          children: \"COURANT\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"EPARGNE\",\n          children: \"EPARGNE\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      className: \"submit-btn\",\n      children: \"Ajouter\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n};\n_s(AddComptes, \"GzP4mU/oXdSx97E1w4ifWt+WlPI=\", false, function () {\n  return [useMutation];\n});\n_c = AddComptes;\nexport default AddComptes;\nvar _c;\n$RefreshReg$(_c, \"AddComptes\");","map":{"version":3,"names":["React","useState","useMutation","SAVE_COMPTE","GET_ALL_COMPTES","jsxDEV","_jsxDEV","AddComptes","_s","solde","setSolde","type","setType","dateCreation","setDateCreation","Date","toISOString","saveCompte","error","refetchQueries","query","handleSubmit","e","preventDefault","variables","compte","parseFloat","err","console","children","message","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","className","value","onChange","target","placeholder","_c","$RefreshReg$"],"sources":["C:/Users/PC/Desktop/react-transaction-bank-main/src/components/AddComptes.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { useMutation } from '@apollo/client';\nimport { SAVE_COMPTE, GET_ALL_COMPTES } from '../graphql/queries';\n\nconst AddComptes = () => {\n  const [solde, setSolde] = useState('');\n  const [type, setType] = useState('COURANT');\n  const [dateCreation, setDateCreation] = useState(new Date().toISOString());\n\n  const [saveCompte, { error }] = useMutation(SAVE_COMPTE, {\n    refetchQueries: [{ query: GET_ALL_COMPTES }],\n  });\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    try {\n      await saveCompte({\n        variables: {\n          compte: {\n            solde: parseFloat(solde),\n            type,\n            dateCreation,\n          },\n        },\n      });\n      setSolde('');\n      setType('COURANT');\n      setDateCreation(new Date().toISOString());\n    } catch (err) {\n      console.error(err);\n    }\n  };\n\n  if (error) return <p>Erreur: {error.message}</p>;\n\n  return (\n    <form onSubmit={handleSubmit} className=\"add-compte-form\">\n      <h3>Ajouter un compte</h3>\n      <div>\n        <input\n          type=\"number\"\n          value={solde}\n          onChange={(e) => setSolde(e.target.value)}\n          placeholder=\"Solde\"\n          className=\"input-field\"\n        />\n      </div>\n      <div>\n        <select value={type} onChange={(e) => setType(e.target.value)} className=\"input-field\">\n          <option value=\"COURANT\">COURANT</option>\n          <option value=\"EPARGNE\">EPARGNE</option>\n        </select>\n      </div>\n      <button type=\"submit\" className=\"submit-btn\">Ajouter</button>\n    </form>\n  );\n};\n\nexport default AddComptes;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}