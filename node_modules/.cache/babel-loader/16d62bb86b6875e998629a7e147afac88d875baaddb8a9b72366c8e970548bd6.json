{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\PC\\\\Desktop\\\\react-transaction-bank-main\\\\src\\\\components\\\\AddTransaction.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useMutation } from '@apollo/client';\nimport { ADD_TRANSACTION } from '../graphql/queries'; // Assurez-vous que le chemin est correct\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AddTransaction = ({\n  refetch\n}) => {\n  _s();\n  const [montant, setMontant] = useState('');\n  const [date, setDate] = useState('');\n  const [type, setType] = useState('DEPOT');\n  const [compteId, setCompteId] = useState('');\n  const [compteSolde, setCompteSolde] = useState(null); // État pour suivre le solde du compte\n\n  const [addTransaction] = useMutation(ADD_TRANSACTION, {\n    onCompleted: data => {\n      // Mettre à jour le solde du compte après la transaction\n      setCompteSolde(data.addTransaction.compte.solde);\n      // Recharger la liste des transactions après ajout\n      refetch(); // Utilisation de refetch pour actualiser les données\n    }\n  });\n  const handleSubmit = async e => {\n    e.preventDefault();\n    try {\n      const response = await addTransaction({\n        variables: {\n          transactionReq: {\n            montant: parseFloat(montant),\n            date,\n            type,\n            compteId: parseInt(compteId)\n          }\n        }\n      });\n\n      // Si la transaction est réussie, afficher le nouveau solde\n      alert('Transaction ajoutée avec succès!');\n      console.log('Nouveau solde du compte:', response.data.addTransaction.compte.solde);\n    } catch (err) {\n      console.error(\"Erreur lors de l'ajout de la transaction:\", err);\n      alert('Échec de l\\'ajout de la transaction');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Ajouter une Transaction\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Montant:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        value: montant,\n        onChange: e => setMontant(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Date:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"date\",\n        value: date,\n        onChange: e => setDate(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Type:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        value: type,\n        onChange: e => setType(e.target.value),\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"DEPOT\",\n          children: \"DEPOT\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"RETRAIT\",\n          children: \"RETRAIT\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Compte ID:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        value: compteId,\n        onChange: e => setCompteId(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      children: \"Ajouter Transaction\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this), compteSolde !== null && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [\"Solde du compte apr\\xE8s la transaction: \", compteSolde, \"\\u20AC\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n};\n_s(AddTransaction, \"2gx4byuEDKrUZ1AjwBmTDCzAAI4=\", false, function () {\n  return [useMutation];\n});\n_c = AddTransaction;\nexport default AddTransaction;\nvar _c;\n$RefreshReg$(_c, \"AddTransaction\");","map":{"version":3,"names":["React","useState","useMutation","ADD_TRANSACTION","jsxDEV","_jsxDEV","AddTransaction","refetch","_s","montant","setMontant","date","setDate","type","setType","compteId","setCompteId","compteSolde","setCompteSolde","addTransaction","onCompleted","data","compte","solde","handleSubmit","e","preventDefault","response","variables","transactionReq","parseFloat","parseInt","alert","console","log","err","error","onSubmit","children","fileName","_jsxFileName","lineNumber","columnNumber","value","onChange","target","_c","$RefreshReg$"],"sources":["C:/Users/PC/Desktop/react-transaction-bank-main/src/components/AddTransaction.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { useMutation } from '@apollo/client';\nimport { ADD_TRANSACTION } from '../graphql/queries'; // Assurez-vous que le chemin est correct\n\nconst AddTransaction = ({ refetch }) => {\n  const [montant, setMontant] = useState('');\n  const [date, setDate] = useState('');\n  const [type, setType] = useState('DEPOT');\n  const [compteId, setCompteId] = useState('');\n  const [compteSolde, setCompteSolde] = useState(null); // État pour suivre le solde du compte\n\n  const [addTransaction] = useMutation(ADD_TRANSACTION, {\n    onCompleted: (data) => {\n      // Mettre à jour le solde du compte après la transaction\n      setCompteSolde(data.addTransaction.compte.solde);\n      // Recharger la liste des transactions après ajout\n      refetch();  // Utilisation de refetch pour actualiser les données\n    },\n  });\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    try {\n      const response = await addTransaction({\n        variables: {\n          transactionReq: {\n            montant: parseFloat(montant),\n            date,\n            type,\n            compteId: parseInt(compteId),\n          },\n        },\n      });\n\n      // Si la transaction est réussie, afficher le nouveau solde\n      alert('Transaction ajoutée avec succès!');\n      console.log('Nouveau solde du compte:', response.data.addTransaction.compte.solde);\n    } catch (err) {\n      console.error(\"Erreur lors de l'ajout de la transaction:\", err);\n      alert('Échec de l\\'ajout de la transaction');\n    }\n  };\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <h2>Ajouter une Transaction</h2>\n      <div>\n        <label>Montant:</label>\n        <input\n          type=\"number\"\n          value={montant}\n          onChange={(e) => setMontant(e.target.value)}\n        />\n      </div>\n      <div>\n        <label>Date:</label>\n        <input\n          type=\"date\"\n          value={date}\n          onChange={(e) => setDate(e.target.value)}\n        />\n      </div>\n      <div>\n        <label>Type:</label>\n        <select value={type} onChange={(e) => setType(e.target.value)}>\n          <option value=\"DEPOT\">DEPOT</option>\n          <option value=\"RETRAIT\">RETRAIT</option>\n        </select>\n      </div>\n      <div>\n        <label>Compte ID:</label>\n        <input\n          type=\"number\"\n          value={compteId}\n          onChange={(e) => setCompteId(e.target.value)}\n        />\n      </div>\n      <button type=\"submit\">Ajouter Transaction</button>\n\n      {compteSolde !== null && (\n        <div>\n          <h3>Solde du compte après la transaction: {compteSolde}€</h3>\n        </div>\n      )}\n    </form>\n  );\n};\n\nexport default AddTransaction;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}